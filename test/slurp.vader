# Include: include/setup.vader
# 
# Do (Send next paren to the end of s-exp (single line)):
#   i(defn new [x\<Esc>2li(+ 4 2) 5 2)\<Esc>\<Esc>?+\<CR>:call Kick()\<CR>
# 
# Expect (paren to the right is kicked to the end of s-exp):
#   (defn new [x] (+ 4 2 5 2))
# 
# Do (Send next paren to the end of s-exp (multi line)):
#   i(defn new [x\<Esc>2li\<CR>  (+ 4 2 5 2)\<CR>(- 3 2))\<Esc>?+\<CR>:call Kick()\<CR>
# 
# Expect (paren to the right is kicked to the end of s-exp):
#   (defn new [x]
#     (+ 4 2 5 2
#     (- 3 2)))
